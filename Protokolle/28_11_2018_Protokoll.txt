Protokoll
Beginn: 9:00 - 11:40 / mit Clemens
Beginn 9:00
Gesamtende: 13:40
Protokollant: Julian Steitz


Sprint Review:
	Gruppe erklärt Progress an Thomas
		Jonas zeigt Code Struktur, 
	Thomas fragt nach VM:
		Ports die geöffnet werden sollen: 8080

Thomas freut sich
Thomas ist begeistert

Wünsche von Thomas:
	Jahresauswahl vereinfachen
	Autor zusammenwürfeln

Gruppe (in Form von Daniel) schlägt ein API-wiki auf github vor. Thomas stimmt zu. Nimmt auch es auch gerne als Ort für die Gesamtdoku.

Was für Daten wären denn sinnvoll:
	Thomas wiederholt, Fokus auf Generizität - möglichst viel Wiederverwendbarkeit
	Beispielkonversationen: open maps/google maps - wilde Daten "Wo ist die Location der Konferenz und was gibt es dort interessantes" "Wo 
	kann ich heute nach der Konferenz essen gehen" 
	Konferenzprogramm - Workshops, Events, "wann ist der große Auftritt" - Thomas betont

Aufgabe vom Arbeitgeber (teilw. Bewertungsgrundlage):
	Wiki 


Vortrag: 
	pdf-Präsentation offen

Misc.
"alles was wissenswert ist"
Mehrwert an Informationen - Mehr als gefragt

User Stories:
	ich will informationen über den chair einer spezifischen Veranstaltung

	timetable von Veranstaltung
		Als User will ich einen Zeitplan angezeigt bekommen zu einer Veranstaltung
		INVEST - Independent ~ pro Sprint, Negotatiable (keine technischen Details Implementation verhandelbar), Viable "hat die User 
		Story ein Nutzen für den Anwender" (wiki keine Userstory aber technischer Task) -WOBEI: unsere User sind Gruppe 13 + Thomas: 
		doch eine User Story, Estimatable (schätzbar)- ausreichend detailliert, Small (beinhaltet nicht zwei Ziele) Name und Alter von 
		Autor trennen(kann auch schon klein genug sein), Testable (Akzeptanzkriterium existiert) "alle Endpoints der API sind 
		beschrieben im Wiki mit Input und Output
		
		Schwierigster Punkt "Small" Ansatzpunkt: maximal 1/6 von Sprintkapazität
		Aufteilung von User Story: wie kann ich sie weiter aufteilen? Ansätze sind in der von Clemens verlinkten Übersicht Trennung 
		Endpoint+Startpoint von Mittel(Verarbeitung) minimaler (erweiterbarer Workflow)
		happy-pass nur den Idealfall implementieren - Behandlung von Fehlern später - reine Funktionalität - performance-optimierung 
		erst später
		Mehr in den Ansätzen

Trennung User Stories und technische Tasks				


Teamtreffen:
Jonas kümmert sich um das QS-Dokument und ist schuld.
Angesprochen:
	Namesplitting wird gelöst 
	Paper mehrfach bei Ansprache über byPaper/ID -- 
	seperate Autor-Instanz pro Paper
	Konnektor Scraper zum Rest (Inserter) -- Slack Julian+Jonas
	Repository Pattern Erklärung von Tristan

nächste Woche:
	jeder soll sich da reinlesen: Repository Pattern - Tristan schickt links -- Sonntag
	Referenzimplementierung mit Join sofern möglich: Tristan
	

Zeit wurde produktiv genutzt



Definition: Veranstaltung geändert zu Konferenz und diese beinhaltet Events
